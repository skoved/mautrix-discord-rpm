diff -urN discordgo-0.27.0-orig/logging.go discordgo-0.27.0/logging.go
--- discordgo-0.27.0-orig/logging.go	2023-01-17 18:08:41.000000000 -0500
+++ discordgo-0.27.0/logging.go	2025-06-05 11:37:44.904584480 -0400
@@ -39,10 +39,11 @@
 
 // msglog provides package wide logging consistency for discordgo
 // the format, a...  portion this command follows that of fmt.Printf
-//   msgL   : LogLevel of the message
-//   caller : 1 + the number of callers away from the message source
-//   format : Printf style message format
-//   a ...  : comma separated list of values to pass
+//
+//	msgL   : LogLevel of the message
+//	caller : 1 + the number of callers away from the message source
+//	format : Printf style message format
+//	a ...  : comma separated list of values to pass
 func msglog(msgL, caller int, format string, a ...interface{}) {
 
 	if Logger != nil {
@@ -58,13 +59,31 @@
 		fns := strings.Split(name, ".")
 		name = fns[len(fns)-1]
 
-		msg := fmt.Sprintf(format, a...)
+		var msg string
+		if len(a) > 0 {
+			msg = fmt.Sprintf(format, a...)
+		} else {
+			msg = fmt.Sprint(format)
+		}
 
 		log.Printf("[DG%d] %s:%d:%s() %s\n", msgL, file, line, name, msg)
 	}
 }
 
 // helper function that wraps msglog for the Session struct
+// This adds a check to insure the message is only logged
+// if the session log level is equal or higher than the
+// message log level
+func (s *Session) logg(msgL int, format string) {
+
+	if msgL > s.LogLevel {
+		return
+	}
+
+	msglog(msgL, 2, format)
+}
+
+// helper function that wraps msglog for the Session struct
 // This adds a check to insure the message is only logged
 // if the session log level is equal or higher than the
 // message log level
diff -urN discordgo-0.27.0-orig/restapi.go discordgo-0.27.0/restapi.go
--- discordgo-0.27.0-orig/restapi.go	2023-01-17 18:08:41.000000000 -0500
+++ discordgo-0.27.0/restapi.go	2025-06-05 11:37:46.040864836 -0400
@@ -296,7 +296,7 @@
 		}
 	case http.StatusUnauthorized:
 		if strings.Index(s.Token, "Bot ") != 0 {
-			s.log(LogInformational, ErrUnauthorized.Error())
+			s.logg(LogInformational, ErrUnauthorized.Error())
 			err = ErrUnauthorized
 		}
 		fallthrough
